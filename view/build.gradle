plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'maven-publish'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName version
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'androidx.core:core-ktx:0.1'
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

publishing {
    publications {
        lib(MavenPublication) {
            artifactId 'view'

            artifact sourceJar
            artifact bundleRelease

            pom.withXml {
                def node = asNode()
                node.appendNode('description', 'A library that provides a gauge view for use in android projects')

                // Following is based on code from https://gist.github.com/Robyer/a6578e60127418b380ca133a1291f017
                def dependenciesNode = node.appendNode('dependencies')

                // List all compile dependencies and write to POM
                configurations.implementation.getAllDependencies().each { Dependency dep ->
                    if (dep.group == null || dep.version == null || dep.name == null || dep.name == "unspecified")
                        return // ignore invalid dependencies

                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dep.group)
                    dependencyNode.appendNode('artifactId', dep.name)
                    dependencyNode.appendNode('version', dep.version)
                    dependencyNode.appendNode('scope', 'runtime')

                    if (!dep.transitive) {
                        // If this dependency is transitive, we should force exclude all its dependencies them from the POM
                        def exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                        exclusionNode.appendNode('groupId', '*')
                        exclusionNode.appendNode('artifactId', '*')
                    } else if (!dep.properties.excludeRules.empty) {
                        // Otherwise add specified exclude rules
                        def exclusionsNode = dependencyNode.appendNode('exclusions')
                        dep.properties.excludeRules.each { ExcludeRule rule ->
                            def exclusionNode = exclusionsNode.appendNode('exclusion')
                            exclusionNode.appendNode('groupId', rule.group ?: '*')
                            exclusionNode.appendNode('artifactId', rule.module ?: '*')
                        }
                    }
                }
            }
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayApikey
    publications = ['lib']
    pkg {
        repo = 'maven'
        name = 'gaugeview'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/daverix/gaugeview.git'

        version {
            name = project.version
            desc = 'A library that provides a gauge view for use in android projects'
            vcsTag = "v$project.version"
        }
    }
}
